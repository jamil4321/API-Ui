{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","inputItem","items","url","getItems","a","fetch","method","then","res","json","data","catch","err","promise","addItem","flag","newItem","id","uuid","item","isEdit","headers","body","JSON","stringify","setState","alert","onEditPress","index","console","log","editItem","EditChange","e","editItemChange","target","value","onEditSave","editItemSave","onDeletClick","removeItm","splice","get","func","type","this","onChange","onClick","map","i","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4a5475c.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { v1 as uuid } from 'uuid'\nclass App extends Component {\n  state = {\n    inputItem: '',\n    items: [],\n    url: 'https://apiandui.herokuapp.com'\n  }\n  componentDidMount() {\n    let func = async () => {\n      let get = await this.getItems()\n      this.setState({ items: get })\n    }\n    func()\n  }\n  getItems = async () => {\n    const promise = await fetch(`${this.state.url}/getItems`, {\n      method: 'GET',\n    }).then(res => res.json()).then(data => data).catch(err => err)\n    return await promise\n  }\n  addItem = async () => {\n    let flag = true\n    let newItem = {\n      id: uuid(),\n      item: this.state.inputItem,\n      isEdit: false\n    }\n    let promise = await fetch(`${this.state.url}/addItem`, {\n      method: 'POST',\n      headers: { 'content-type': 'application/json' },\n      body: JSON.stringify(newItem)\n    }).then(res => res.json()).then(data => data).catch(err => { flag = false })\n    if (flag) {\n      this.setState({ items: [...this.state.items, promise[0]] })\n    } else {\n      alert('Unable to Insert ')\n    }\n    this.setState({ inputItem: '' })\n  }\n  onEditPress = (index) => {\n    console.log('press')\n    let editItem = this.state.items;\n    editItem[index].isEdit = true;\n    this.setState({ items: editItem });\n  }\n  EditChange = (e, index) => {\n    console.log('press')\n    let editItemChange = this.state.items;\n    editItemChange[index].item = e.target.value;\n    this.setState({ items: editItemChange })\n    console.log(e.target.value)\n  }\n  onEditSave = async (index) => {\n    console.log('press')\n    let editItemSave = this.state.items;\n    editItemSave[index].isEdit = false;\n    this.setState({ items: editItemSave })\n    let promise = await fetch(`${this.state.url}/updateItem`, {\n      method: 'POST',\n      headers: { 'content-type': 'application/json' },\n      body: JSON.stringify(this.state.items[index])\n    }).then(res => res.json()).then(data => data).catch(err => console.log(err))\n  }\n  onDeletClick = async (index) => {\n    console.log('press')\n    let promise = await fetch(`${this.state.url}/remove`, {\n      method: 'POST',\n      headers: { 'content-type': 'application/json' },\n      body: JSON.stringify(this.state.items[index])\n    }).then(res => res.json()).then(data => data).catch(err => console.log(err))\n    console.log(index, this.state.items)\n    var removeItm = this.state.items;\n    removeItm.splice(index, 1);\n    this.setState({ items: removeItm });\n    console.log(this.state.item)\n  }\n  render() {\n    return (\n      <div>\n        <div>\n          <h1>Enter Your Task</h1>\n          <input type=\"text\" value={this.state.inputItem} onChange={(e) => this.setState({ inputItem: e.target.value })} />\n          <button onClick={this.addItem}>\n            submit\n        </button>\n        </div>\n        <div>\n          <h1>Your Task</h1>\n          <div>\n            <ul>\n              {this.state.items.map((data, i) => {\n                return (\n                  <li key={data + i}>{data.isEdit ? <>\n                    <input value={data.item} onChange={(e) => this.EditChange(e, i)} /> <button onClick={() => this.onEditSave(i)}>save</button></> :\n                    <>{data.item}<button onClick={() => this.onDeletClick(i)}>Delete</button><button onClick={() => this.onEditPress(i)}>Edit</button></>}</li>\n                )\n              })}\n            </ul>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}